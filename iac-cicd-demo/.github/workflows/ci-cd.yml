name: ci-cd

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE: ghcr.io/${{ github.repository_owner }}/ads-demo:${{ github.sha }}

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install test deps
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt pytest

      - name: Run tests
        run: pytest -q

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }},ghcr.io/${{ github.repository_owner }}/ads-demo:latest

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v4

      - name: Write kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > $HOME/.kube/config

      - name: Update image and apply manifests
        run: |
          sed -i "s|ghcr.io/OWNER/ads-demo:latest|${{ env.IMAGE }}|g" k8s/deployment-service-ingress.yaml
          kubectl apply -f k8s/deployment-service-ingress.yaml

      - name: Notify Telegram
        if: always()
        run: |
          STATUS=${{ job.status }}
          MSG="CI/CD $STATUS for ${{ github.repository }}@${{ github.sha }}"
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TG_CHAT_ID }} \
            -d text="$MSG"